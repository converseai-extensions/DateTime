/**
 * @file check.js
 * @author graeme+admin@converse.ai
 * @description Check an input date against specified conditions
 * and route your template accordingly.
 *
 * Generated by the converse-cli tool for use with the Converse AI
 * Plugins SDK. https://developers.converse.ai/
 */

'use strict';

const Status          = require('@converseai/plugins-sdk').Status;
const ModuleResponse  = require('@converseai/plugins-sdk').Payloads.ModuleResponse;

module.exports = function check (app, body) {
 /**
  * Registration parameters are assigned to body.payload.registrationData
  * and Module parameters are assigned to body.payload.moduleParam.
  * @example
  * var regOne = body.payload.registrationData.regOne;
  * var modOne = body.payload.moduleParam.modOne;
  */

  /** @type {String} input Accepts text in the international ISO 8601
  * or RFC 2822 formats. Will also accept the response from the
  * Parse Date module as input.  */
  var input = body.payload.moduleParam.input;

  /** @type {String} condition Specify the condition to check input
  * date against.  */
  var condition = body.payload.moduleParam.condition;

  /** @type {String} reference1   */
  var reference1 = body.payload.moduleParam.reference_1;

  /** @type {String} reference2   */
  var reference2 = body.payload.moduleParam.reference_2;

  /** @type {Boolean} inclusive   */
  var inclusive = body.payload.moduleParam.inclusive;

  var {monday, tuesday, wednesday, thursday, friday, saturday, sunday} = body.payload.moduleParam;

  if (input !== undefined && condition !== undefined) {
    /** @type {ModuleResponse} response The Converse AI response to respond with. */
    var response = new ModuleResponse();

    /*
    * This will return a success status and response to the conversation.
    * It is important to always call this method when the module has finished
    * computing regardless of whether you wish to send a response or not. If not,
    * the conversation will hang indefinitely.
    */
    app.send(Status.SUCCESS, response);
  } else {
    app.fail({ httpStatus: 400, code: 'REQUIRED_PARAMS_UNDEFINED', description: 'Required parameters are undefined.' });
  }
};
