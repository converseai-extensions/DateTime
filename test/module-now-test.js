/**
 * @file test/module-now-test.js
 * @author graeme+admin@converse.ai
 * @description
 *
 * Generated by the converse-cli tool for use with the Converse AI
 * Plugins SDK. https://developers.converse.ai/
 */

const expect      = require('chai').expect;
const moment      = require('moment');
const test        = require('./lib/request-parse');

describe('Now', function () {

  var now = function(offset = '+00:00') {
    var m = moment.utc(moment.utc().utc()).utcOffset(offset, false)
    return Object.assign(m.toObject(), {
      months: m.toObject().months + 1,
      iso: m.format('YYYY-MM-DDTHH:mm:ssZ'),
      utc: m.clone().utc().format('YYYY-MM-DDTHH:mm:ssZ'),
      unix: m.clone().unix(),
      offset: m.format('Z')
    });
  }

  /* * * * * * * * * * * * * * * * * *
  * Without Input
  * * * * * * * * * * * * * * * * * */

  it('without input', function(done) {
    var n = now();
    test({}, {
      years: n.years,
      months: n.months,
      date: n.date,
      hours: n.hours,
      minutes: n.minutes,
      seconds: n.seconds,
      iso: n.iso,
      utc: n.utc,
      unix: n.unix,
      offset: '+00:00',
      isValid: true
    }, done, 'now');
  })

  /* * * * * * * * * * * * * * * * * *
  * Static Offset
  * * * * * * * * * * * * * * * * * */

  it('with static offset (-07:00)', function(done) {
    var n = now('-07:00');
    test({
      offset: '-07:00',
    }, {
      years: n.years,
      months: n.months,
      date: n.date,
      hours: n.hours,
      minutes: n.minutes,
      seconds: n.seconds,
      iso: n.iso,
      utc: n.utc,
      unix: n.unix,
      offset: '-07:00',
      isValid: true
    }, done, 'now');
  })

  /* * * * * * * * * * * * * * * * * *
  * Static Offset
  * * * * * * * * * * * * * * * * * */

  it('with custom offset (-07:00)', function(done) {
    var n = now('-07:00');
    test({
      offset: 'CUSTOM',
      custom_offset: '-07:00',
    }, {
      years: n.years,
      months: n.months,
      date: n.date,
      hours: n.hours,
      minutes: n.minutes,
      seconds: n.seconds,
      iso: n.iso,
      utc: n.utc,
      unix: n.unix,
      offset: '-07:00',
      isValid: true
    }, done, 'now');
  })

  /* * * * * * * * * * * * * * * * * *
  * Timezone Offset
  * * * * * * * * * * * * * * * * * */

  it('with timezone offset (-07:00)', function(done) {
    var n = now('-07:00');
    test({
      offset: 'ZONE',
      timezone_offset: 'America/Los_Angeles'
    }, {
      years: n.years,
      months: n.months,
      date: n.date,
      hours: n.hours,
      minutes: n.minutes,
      seconds: n.seconds,
      iso: n.iso,
      utc: n.utc,
      unix: n.unix,
      offset: '-07:00',
      isValid: true
    }, done, 'now');
  })

  /* * * * * * * * * * * * * * * * * *
  * Lat/Long Offset
  * * * * * * * * * * * * * * * * * */

  it('with location offset (47.650499, -122.350070)', function(done) {
    var n = now('-07:00');
    test({
      offset: 'LOCATION',
      location_offset: '47.650499, -122.350070'
    }, {
      years: n.years,
      months: n.months,
      date: n.date,
      hours: n.hours,
      minutes: n.minutes,
      seconds: n.seconds,
      iso: n.iso,
      utc: n.utc,
      unix: n.unix,
      offset: '-07:00',
      isValid: true
    }, done, 'now');
  })

});
