/**
 * @file test/module-check-test.js
 * @author graeme@converse.ai
 * @description Check an input date against specified conditions
 * and route your template accordingly.
 *
 * Generated by the converse-cli tool for use with the Converse AI
 * Plugins SDK. https://developers.converse.ai/
 */

const _           = require('lodash');
const expect      = require('chai').expect;
const test        = require('./lib/request-test').testExit;

describe('Check Date/Time', function () {

  /* * * * * * * * * * * * * * * * * *
  * Without Input
  * * * * * * * * * * * * * * * * * */

  it('without input', function(done) {
    test({}, function(err, res, done) {
      expect(res.body).to.have.property('status').to.equal(1);
      expect(res.body).to.have.property('error').to.have.property('httpStatus').to.equal(400);
      done();
    }, done);
  })

  /* * * * * * * * * * * * * * * * * *
  * Is Day
  * * * * * * * * * * * * * * * * * */

  it('Is Sunday (Success) (2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isDay',
      days: ['Sunday'],
    }, 'Success', done);
  })

  it('Is Sunday (Success) (1499031000)', function(done) {
    test({
      input: '1499031000',
      condition: 'isDay',
      days: ['Sunday'],
    }, 'Success', done);
  })

  it('Is Sunday or Saturday (Success) (2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isDay',
      days: ['Sunday', 'Saturday'],
    }, 'Success', done);
  })

  it('Is Tuesday (Failed) (2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isDay',
      days: ['Tuesday'],
    }, 'Failed', done);
  })

  /* * * * * * * * * * * * * * * * * *
  * Is LeapYear
  * * * * * * * * * * * * * * * * * */

  it('Is Leap Year (Failed) (2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isLeapYear'
    }, 'Failed', done);
  })

  it('Is Leap Year (Success) (2020-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2020-07-02T21:30:00+00:00',
      condition: 'isLeapYear'
    }, 'Success', done);
  })

  it('EDGE CASE Is Leap Year (Success) (2017-07-02T21:30:00-07:00) with offset (-07:00)', function(done) {
    test({
      input: '2019-12-31T21:30:00-07:00',
      condition: 'isLeapYear'
    }, 'Failed', done);
  })

  it('EDGE CASE Is Leap Year (Failed) (2000-07-02T21:30:00-07:00) with offset (+07:00)', function(done) {
    test({
      input: '2000-01-01T01:30:00+07:00',
      condition: 'isLeapYear'
    }, 'Success', done);
  })


  /* * * * * * * * * * * * * * * * * *
  * Is Before
  * * * * * * * * * * * * * * * * * */

  it('Is Before (Success) (2017-07-02T21:30:00+00:00 < 2018-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isBefore',
      reference_1: '2018-07-02T21:30:00+00:00',
      inclusive: false
    }, 'Success', done);
  })

  it('Is Before (Failed) (2018-07-02T21:30:00+00:00 < 2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2018-07-02T21:30:00+00:00',
      condition: 'isBefore',
      reference_1: '2017-07-02T21:30:00+00:00',
      inclusive: false
    }, 'Failed', done);
  })

  it('Is Before Exclusive (Failed) (2017-07-02T21:30:00+00:00 < 2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isBefore',
      reference_1: '2017-07-02T21:30:00+00:00',
      inclusive: false
    }, 'Failed', done);
  })

  it('Is Before Exlusive (Failed) (2017-07-02T21:30:00+00:00 < 2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isBefore',
      reference_1: '2017-07-02T21:30:00+00:00',
      inclusive: false
    }, 'Failed', done);
  })

  it('Is Before Inclusive (Success) (2017-07-02T21:30:00+00:00 <= 2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isBefore',
      reference_1: '2017-07-02T21:30:00+00:00',
      inclusive: true
    }, 'Success', done);
  })

  it('Is Before Inclusive (Success) (2017-07-02T21:30:00+00:00 <= 2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isBefore',
      reference_1: '2017-07-02T21:30:00+00:00',
      inclusive: true
    }, 'Success', done);
  })

  /* * * * * * * * * * * * * * * * * *
  * Is After
  * * * * * * * * * * * * * * * * * */

  it('Is After (Success) (2017-07-02T21:30:00+00:00 > 2018-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isBefore',
      reference_1: '2018-07-02T21:30:00+00:00',
      inclusive: false
    }, 'Success', done);
  })

  it('Is After (Failed) (2018-07-02T21:30:00+00:00 > 2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2018-07-02T21:30:00+00:00',
      condition: 'isBefore',
      reference_1: '2017-07-02T21:30:00+00:00',
      inclusive: false
    }, 'Failed', done);
  })

  it('Is After Exclusive (Failed) (2017-07-02T21:30:00+00:00 > 2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isBefore',
      reference_1: '2017-07-02T21:30:00+00:00',
      inclusive: false
    }, 'Failed', done);
  })

  it('Is After Exlusive (Failed) (2017-07-02T21:30:00+00:00 > 2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isBefore',
      reference_1: '2017-07-02T21:30:00+00:00',
      inclusive: false
    }, 'Failed', done);
  })

  it('Is After Inclusive (Success) (2017-07-02T21:30:00+00:00 >= 2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isBefore',
      reference_1: '2017-07-02T21:30:00+00:00',
      inclusive: true
    }, 'Success', done);
  })

  it('Is After Inclusive (Success) (2017-07-02T21:30:00+00:00 >= 2017-07-02T21:30:00+00:00)', function(done) {
    test({
      input: '2017-07-02T21:30:00+00:00',
      condition: 'isBefore',
      reference_1: '2017-07-02T21:30:00+00:00',
      inclusive: true
    }, 'Success', done);
  })


  /* * * * * * * * * * * * * * * * * *
  * Is Between
  * * * * * * * * * * * * * * * * * */


});
